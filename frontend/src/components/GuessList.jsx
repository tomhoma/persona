import React from 'react';
const getRankColor = (r) => { if (r === 1) return 'rank-gold'; if (r <= 300) return 'rank-green'; if (r <= 1500) return 'rank-yellow'; return 'rank-red'; };
const formatPercent = (val) => `${(val * 100).toFixed(1)}%`;
export default function GuessList({ guesses }) {
  return (<div className="guess-list-container"><div className="guess-list-header"><div>Rank</div><div>Name</div><div>Similarity Details</div></div><div className="guess-list-body">{guesses.length===0?(<div className="guess-list-empty">Guesses appear here.</div>):(guesses.map(g=>(<div key={g.qid} className={`guess-list-item ${getRankColor(g.rank)}`}><div className="item-rank">{g.rank}</div><div className="item-name">{g.label}</div><div className="item-details"><div className="similarity-bar"><span className="sim-label">ðŸ“– Narrative:</span><div className="bar-bg"><div className="bar-fill bar-narrative" style={{width: formatPercent(g.sim_narrative)}}></div></div><span className="sim-value">{formatPercent(g.sim_narrative)}</span></div><div className="similarity-bar"><span className="sim-label">ðŸ“Š Factual:</span><div className="bar-bg"><div className="bar-fill bar-factual" style={{width: formatPercent(g.sim_factual)}}></div></div><span className="sim-value">{formatPercent(g.sim_factual)}</span></div><div className="similarity-bar"><span className="sim-label">ðŸ”— Relational:</span><div className="bar-bg"><div className="bar-fill bar-relational" style={{width: formatPercent(g.sim_relational)}}></div></div><span className="sim-value">{formatPercent(g.sim_relational)}</span></div><div className="similarity-total"><strong>Total Score: {g.score.toFixed(4)}</strong></div></div></div>)))}</div></div>);
}
